<?php

/**
 * BaseEstimation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property boolean $is_active
 * @property decimal $length
 * @property decimal $width
 * @property decimal $percent
 * @property decimal $price
 * @property integer $glassprice_id
 * @property integer $created_by
 * @property integer $updated_by
 * @property GlassPrice $glasspriceestimation
 * @property sfGuardUser $CtrCreatedBy
 * @property sfGuardUser $CtrUpdatedBy
 * @property Estim $Estim
 * @property Devis $Devis
 * @property Client $Client
 * 
 * @method boolean     getIsActive()             Returns the current record's "is_active" value
 * @method decimal     getLength()               Returns the current record's "length" value
 * @method decimal     getWidth()                Returns the current record's "width" value
 * @method decimal     getPercent()              Returns the current record's "percent" value
 * @method decimal     getPrice()                Returns the current record's "price" value
 * @method integer     getGlasspriceId()         Returns the current record's "glassprice_id" value
 * @method integer     getCreatedBy()            Returns the current record's "created_by" value
 * @method integer     getUpdatedBy()            Returns the current record's "updated_by" value
 * @method GlassPrice  getGlasspriceestimation() Returns the current record's "glasspriceestimation" value
 * @method sfGuardUser getCtrCreatedBy()         Returns the current record's "CtrCreatedBy" value
 * @method sfGuardUser getCtrUpdatedBy()         Returns the current record's "CtrUpdatedBy" value
 * @method Estim       getEstim()                Returns the current record's "Estim" value
 * @method Devis       getDevis()                Returns the current record's "Devis" value
 * @method Client      getClient()               Returns the current record's "Client" value
 * @method Estimation  setIsActive()             Sets the current record's "is_active" value
 * @method Estimation  setLength()               Sets the current record's "length" value
 * @method Estimation  setWidth()                Sets the current record's "width" value
 * @method Estimation  setPercent()              Sets the current record's "percent" value
 * @method Estimation  setPrice()                Sets the current record's "price" value
 * @method Estimation  setGlasspriceId()         Sets the current record's "glassprice_id" value
 * @method Estimation  setCreatedBy()            Sets the current record's "created_by" value
 * @method Estimation  setUpdatedBy()            Sets the current record's "updated_by" value
 * @method Estimation  setGlasspriceestimation() Sets the current record's "glasspriceestimation" value
 * @method Estimation  setCtrCreatedBy()         Sets the current record's "CtrCreatedBy" value
 * @method Estimation  setCtrUpdatedBy()         Sets the current record's "CtrUpdatedBy" value
 * @method Estimation  setEstim()                Sets the current record's "Estim" value
 * @method Estimation  setDevis()                Sets the current record's "Devis" value
 * @method Estimation  setClient()               Sets the current record's "Client" value
 * 
 * @package    Rdv
 * @subpackage model
 * @author     Bongas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEstimation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('estimation');
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('length', 'decimal', null, array(
             'type' => 'decimal',
             'notnull' => true,
             ));
        $this->hasColumn('width', 'decimal', null, array(
             'type' => 'decimal',
             'notnull' => false,
             ));
        $this->hasColumn('percent', 'decimal', null, array(
             'type' => 'decimal',
             'notnull' => false,
             ));
        $this->hasColumn('price', 'decimal', null, array(
             'type' => 'decimal',
             'notnull' => false,
             ));
        $this->hasColumn('glassprice_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('created_by', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('updated_by', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('GlassPrice as glasspriceestimation', array(
             'local' => 'glassprice_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as CtrCreatedBy', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as CtrUpdatedBy', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $this->hasOne('Estim', array(
             'local' => 'id',
             'foreign' => 'nombre_id'));

        $this->hasOne('Devis', array(
             'local' => 'id',
             'foreign' => 'nombre_id'));

        $this->hasOne('Client', array(
             'local' => 'id',
             'foreign' => 'nombre_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}